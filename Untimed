package com.thesis.boggleit;

import android.app.Activity;
import android.os.Bundle;
import android.view.Menu;
import android.content.res.Resources;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.view.View;
import android.widget.Button;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.Toast;


public class Untimed extends Activity{
	
	private static final int NUM_ROWS = 4;
	private static final int NUM_COLS = 4;

	Button buttons[][]= new Button[NUM_ROWS][NUM_COLS];

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.untimed);
		
		populateButtons();

	}

	private void populateButtons() {
		// TODO Auto-generated method stub
		TableLayout table = (TableLayout) findViewById(R.id.tbButtons);
		for (int row = 0; row < NUM_ROWS; row++){
			TableRow tableRow = new TableRow(this);
			tableRow.setLayoutParams(new TableLayout.LayoutParams(
					TableLayout.LayoutParams.MATCH_PARENT,
					TableLayout.LayoutParams.MATCH_PARENT,
					1.0f)); // 1.0f = Scale
			table.addView(tableRow);
			
			
			for (int col = 0; col < NUM_COLS; col++){
				final int FINAL_COL = col;
				final int FINAL_ROW = row;
				Button button = new Button(this);
				button.setLayoutParams(new TableRow.LayoutParams(
						TableRow.LayoutParams.MATCH_PARENT,
						TableRow.LayoutParams.MATCH_PARENT,
						1.0f));
				
				button.setText("" + col + "," + row);
				button.setPadding(0, 0, 0, 0);
				button.setOnClickListener(new View.OnClickListener() {
					
					@Override
					public void onClick(View v) {
						// TODO Auto-generated method stub
						gridButtonClicked(FINAL_COL, FINAL_ROW);
					}
				});
				tableRow.addView(button);
				buttons[row][col] = button;	
			}
		}
}

	private void gridButtonClicked(int col, int row) {
		// TODO Auto-generated method stub
		Toast.makeText(this, "Button Clicked: " + col + "," + row,
				Toast.LENGTH_SHORT).show();
		Button button = buttons[row][col];
// LOCK BUTTON SIZES
		lockButtonSize();
// SCALE IMAGE TO BUTTON
		int newWidth = button.getWidth();
		int newHeight = button.getHeight();
		Bitmap originalBitmap = BitmapFactory.decodeResource(getResources(), R.drawable.bg);
		Bitmap scaledBitmap = Bitmap.createScaledBitmap(originalBitmap, newWidth, newHeight, true);
		Resources resource = getResources();
		button.setBackground(new BitmapDrawable(resource, scaledBitmap));
		
// CHANGE TEXT ON BUTTON
		button.setText("" + col);
	}

	
	
	private void lockButtonSize() {
		// TODO Auto-generated method stub

		for(int row = 0; row < NUM_ROWS; row++){
			for(int col = 0; col < NUM_COLS; col++){
				Button button = buttons[row][col];
				
				int width = button.getWidth();
				button.setMinWidth(width);
				button.setMaxWidth(width);
				

				int height = button.getHeight();
				button.setMinWidth(height);
				button.setMaxWidth(height);
			}
		}
	}


	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		return super.onCreateOptionsMenu(menu);
	}
}
